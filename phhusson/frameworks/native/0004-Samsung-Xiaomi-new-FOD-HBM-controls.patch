From 9b549a72aca3abb30af4ef4300493b09ee9a0311 Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Wed, 20 May 2020 21:16:56 +0200
Subject: [PATCH] Samsung + Xiaomi new FOD HBM controls

Change-Id: I5ab27fa70882efa85f0c917bf31bb32adaa09bb1

diff --git a/services/surfaceflinger/BufferQueueLayer.cpp b/services/surfaceflinger/BufferQueueLayer.cpp
index bf840422d..805fc2ef1 100644
--- a/services/surfaceflinger/BufferQueueLayer.cpp
+++ b/services/surfaceflinger/BufferQueueLayer.cpp
@@ -27,6 +27,7 @@
 #include <compositionengine/FodExtension.h>
 #include <gui/BufferQueueConsumer.h>
 #include <system/window.h>
+#include <cutils/properties.h>
 
 #include "LayerRejecter.h"
 #include "SurfaceInterceptor.h"
@@ -35,6 +36,14 @@
 #include "Scheduler/LayerHistory.h"
 #include "TimeStats/TimeStats.h"
 
+static bool sCheckedProps = false;
+static bool sSamsungFod = false;
+static void init_fod_props() {
+    if(sCheckedProps) return;
+    sCheckedProps = true;
+    sSamsungFod = property_get_bool("persist.sys.phh.fod.samsung", false);
+}
+
 namespace android {
 
 BufferQueueLayer::BufferQueueLayer(const LayerCreationArgs& args) : BufferLayer(args) {}
@@ -505,6 +514,7 @@ void BufferQueueLayer::onFirstRef() {
     mConsumer =
             mFlinger->getFactory().createBufferLayerConsumer(consumer, mFlinger->getRenderEngine(),
                                                              mTextureName, this);
+    init_fod_props();
     mConsumer->setConsumerUsageBits(getEffectiveUsage(0));
 
     mContentsChangedListener = new ContentsChangedListener(this);
@@ -536,8 +546,14 @@ status_t BufferQueueLayer::setDefaultBufferProperties(uint32_t w, uint32_t h, Pi
         usageBits = getFodUsageBits(usageBits, true);
     }
 
+    init_fod_props();
+
     setDefaultBufferSize(w, h);
     mConsumer->setDefaultBufferFormat(format);
+    if(sSamsungFod && strstr(mName.c_str(), "Fingerprint on display.touched") != nullptr) {
+        ALOGE("Found on touched layer!");
+        usageBits |= 0x400000000LL;
+    }
     mConsumer->setConsumerUsageBits(usageBits);
 
     return NO_ERROR;
diff --git a/services/surfaceflinger/CompositionEngine/src/OutputLayer.cpp b/services/surfaceflinger/CompositionEngine/src/OutputLayer.cpp
index c7c900d82..b0b63379d 100644
--- a/services/surfaceflinger/CompositionEngine/src/OutputLayer.cpp
+++ b/services/surfaceflinger/CompositionEngine/src/OutputLayer.cpp
@@ -23,6 +23,7 @@
 #include <compositionengine/impl/OutputCompositionState.h>
 #include <compositionengine/impl/OutputLayer.h>
 #include <compositionengine/impl/OutputLayerCompositionState.h>
+#include <cutils/properties.h>
 
 // TODO(b/129481165): remove the #pragma below and fix conversion issues
 #pragma clang diagnostic push
@@ -33,6 +34,10 @@
 // TODO(b/129481165): remove the #pragma below and fix conversion issues
 #pragma clang diagnostic pop // ignored "-Wconversion"
 
+static bool sCheckedProps = false;
+static bool sBBKFod = false;
+static bool sXiaomiFod = false;
+
 namespace android::compositionengine {
 
 OutputLayer::~OutputLayer() = default;
@@ -377,15 +382,30 @@ void OutputLayer::writeOutputDependentGeometryStateToHWC(
     } else if (strcmp(getLayerFE().getDebugName(), FOD_TOUCHED_LAYER_NAME) == 0) {
         z = getFodZOrder(z, true);
     }
+    if(!sCheckedProps) {
+        sCheckedProps = true;
+        sBBKFod = property_get_bool("persist.sys.phh.fod.bbk", false);
+        sXiaomiFod = property_get_bool("persist.sys.phh.fod.xiaomi", false);
+    }
 
     if(strstr(getLayerFE().getDebugName(), "Fingerprint on display") != nullptr) {
         ALOGE("Found fingerprint on display!");
         z = 0x41000031;
+        if(sBBKFod) {
+            z = 0x41000031;
+        } else if(sXiaomiFod) {
+            z |= 0x1000000;
+        }
     }
 
     if(strstr(getLayerFE().getDebugName(), "Fingerprint on display.touched") != nullptr) {
         ALOGE("Found fingerprint on display touched!");
         z = 0x41000033;
+        if(sBBKFod) {
+            z = 0x41000033;
+        } else if(sXiaomiFod) {
+            z |= 0x2000000;
+        }
     }
     if (auto error = hwcLayer->setZOrder(z); error != hal::Error::NONE) {
         ALOGE("[%s] Failed to set Z %u: %s (%d)", getLayerFE().getDebugName(),
-- 
2.25.1

